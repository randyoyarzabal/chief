name: Chief Test Suite

# What triggers this workflow to run
on:
  # Trigger on pushes to main and dev branches
  push:
    branches: [ main, dev ]
  
  # Trigger on pull requests targeting main or dev
  pull_request:
    branches: [ main, dev ]
  
  # Allow manual triggering from GitHub UI
  workflow_dispatch:

# Define the jobs to run
jobs:
  test:
    # Use Ubuntu latest (free for public repos)
    runs-on: ubuntu-latest
    
    # Set a reasonable timeout - tests should complete in 5-10 minutes
    timeout-minutes: 15
    
    steps:
    # Step 1: Get the code
    - name: Checkout repository
      uses: actions/checkout@v4
    
    # Step 2: Cache apt packages to speed up installation
    - name: Cache apt packages
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: shellcheck python3 python3-pip
        version: 1.0
    
    # Step 3: Make test scripts executable
    - name: Make test scripts executable
      run: |
        chmod +x tests/*.sh
        # Also ensure chief.sh is executable
        chmod +x chief.sh
    
    # Step 4: Run complete test suite (this calls all individual tests)
    - name: Run complete test suite
      run: |
        echo "ðŸŽ¯ Running Chief test suite..."
        ./tests/run-tests.sh
    
    # Step 5: Upload test results (optional, for artifacts)
    - name: Upload test results
      if: always()  # Run even if tests fail
      uses: actions/upload-artifact@v4
      with:
        name: test-results-ubuntu
        path: |
          tests/
          *.log
        retention-days: 7

  # Cross-platform compatibility testing (lighter test suite)
  cross-platform-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]  # Remove Ubuntu duplicate since main job covers it
      # Don't fail the entire matrix if one OS fails
      fail-fast: false
    
    timeout-minutes: 15
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Install ShellCheck (macOS)
      run: |
        brew install shellcheck
    
    - name: Make test scripts executable
      run: |
        chmod +x tests/*.sh
    
    # Run core tests only on cross-platform to save time
    - name: Run syntax and source tests (cross-platform)
      run: |
        echo "ðŸ§ª Running core tests on ${{ matrix.os }}..."
        ./tests/syntax-tests.sh
        ./tests/source-tests.sh
