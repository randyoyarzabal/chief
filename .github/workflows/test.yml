name: Chief Test Suite

# What triggers this workflow to run
on:
  # Trigger on pushes to main and dev branches
  push:
    branches: [ main, dev ]
  
  # Trigger on pull requests targeting main or dev
  pull_request:
    branches: [ main, dev ]
  
  # Allow manual triggering from GitHub UI
  workflow_dispatch:

# Define the jobs to run
jobs:
  test:
    # Use Ubuntu latest (free for public repos)
    runs-on: ubuntu-latest
    
    # Set a timeout to prevent runaway builds
    timeout-minutes: 10
    
    steps:
    # Step 1: Get the code
    - name: Checkout repository
      uses: actions/checkout@v4
    
    # Step 2: Install ShellCheck for static analysis
    - name: Install ShellCheck
      run: |
        sudo apt-get update
        sudo apt-get install -y shellcheck
    
    # Step 3: Install additional tools if needed
    - name: Install additional tools
      run: |
        # Install any other tools your scripts might need
        sudo apt-get install -y python3 python3-pip
    
    # Step 4: Make test scripts executable
    - name: Make test scripts executable
      run: |
        chmod +x test/*.sh
        # Also ensure chief.sh is executable
        chmod +x chief.sh
    
    # Step 5: Run individual test suites for better debugging
    - name: Run syntax tests
      run: |
        echo "ðŸ§ª Running syntax validation tests..."
        ./test/syntax-tests.sh
    
    - name: Run source tests
      run: |
        echo "ðŸ“‹ Running source/loading tests..."
        ./test/source-tests.sh
    
    - name: Run plugin tests
      run: |
        echo "ðŸ”Œ Running plugin-specific tests..."
        ./test/plugin-tests.sh
    
    - name: Run integration tests
      run: |
        echo "ðŸš€ Running integration tests..."
        ./test/integration-tests.sh
    
    - name: Run full test suite
      run: |
        echo "ðŸŽ¯ Running complete test suite..."
        ./test/run-tests.sh
    
    # Step 6: Upload test results (optional, for artifacts)
    - name: Upload test results
      if: always()  # Run even if tests fail
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          test/
          *.log
        retention-days: 7

  # Optional: Run on multiple platforms
  cross-platform-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
      # Don't fail the entire matrix if one OS fails
      fail-fast: false
    
    timeout-minutes: 10
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Install ShellCheck (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y shellcheck
    
    - name: Install ShellCheck (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install shellcheck
    
    - name: Make test scripts executable
      run: |
        chmod +x test/*.sh
    
    - name: Run syntax tests only (cross-platform)
      run: |
        echo "ðŸ§ª Running syntax tests on ${{ matrix.os }}..."
        ./test/syntax-tests.sh
    
    - name: Run source tests (cross-platform)
      run: |
        echo "ðŸ“‹ Running source tests on ${{ matrix.os }}..."
        ./test/source-tests.sh
